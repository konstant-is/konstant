{"version":3,"sources":["../../src/fields/socials.ts"],"sourcesContent":["import { field } from \"../lib/field.js\";\nimport { createFieldOptions } from \"../lib/createFieldOptions.js\";\n\nconst socials = createFieldOptions([\n  \"facebook\",\n  \"instagram\",\n  \"twitter\",\n  \"strava\",\n  { label: \"TikTok\", value: \"tikTok\" },\n  { label: \"LinkedIn\", value: \"linkedIn\" },\n]);\n\nexport const socialMediaField = () => {\n  return field({\n    type: \"group\",\n    name: \"socialMedia\",\n    fields: [\n      field({\n        type: \"select\",\n        name: \"selected\",\n        label: \"Select social media\",\n        hasMany: true,\n        options: socials.options,\n      }),\n\n      ...socials.options.map((s) => {\n        const { label, value } = s;\n        return field({\n          name: value,\n          label: `${label} URL`,\n          type: \"text\",\n          admin: {\n            condition: (_, siblingData) =>\n              Array.isArray(siblingData.selected) &&\n              siblingData.selected.includes(value),\n          },\n          hooks: {\n            beforeValidate: [\n              ({ value }) => {\n                if (!value) return value;\n\n                // If the value does not start with http or https, prepend https://\n                if (!/^https?:\\/\\//i.test(value)) {\n                  return `https://${value}`;\n                }\n\n                return value;\n              },\n            ],\n          },\n          validate: (val: any) => {\n            // if (!required && !val) {\n            //   return true\n            // }\n            try {\n              new URL(val);\n              return true;\n            } catch (err: any) {\n              return \"Invalid URL\";\n            }\n          },\n        });\n      }),\n    ],\n  });\n};\n"],"names":["field","createFieldOptions","socials","label","value","socialMediaField","type","name","fields","hasMany","options","map","s","admin","condition","_","siblingData","Array","isArray","selected","includes","hooks","beforeValidate","test","validate","val","URL","err"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AACxC,SAASC,kBAAkB,QAAQ,+BAA+B;AAElE,MAAMC,UAAUD,mBAAmB;IACjC;IACA;IACA;IACA;IACA;QAAEE,OAAO;QAAUC,OAAO;IAAS;IACnC;QAAED,OAAO;QAAYC,OAAO;IAAW;CACxC;AAED,OAAO,MAAMC,mBAAmB;IAC9B,OAAOL,MAAM;QACXM,MAAM;QACNC,MAAM;QACNC,QAAQ;YACNR,MAAM;gBACJM,MAAM;gBACNC,MAAM;gBACNJ,OAAO;gBACPM,SAAS;gBACTC,SAASR,QAAQQ,OAAO;YAC1B;eAEGR,QAAQQ,OAAO,CAACC,GAAG,CAAC,CAACC;gBACtB,MAAM,EAAET,KAAK,EAAEC,KAAK,EAAE,GAAGQ;gBACzB,OAAOZ,MAAM;oBACXO,MAAMH;oBACND,OAAO,GAAGA,MAAM,IAAI,CAAC;oBACrBG,MAAM;oBACNO,OAAO;wBACLC,WAAW,CAACC,GAAGC,cACbC,MAAMC,OAAO,CAACF,YAAYG,QAAQ,KAClCH,YAAYG,QAAQ,CAACC,QAAQ,CAAChB;oBAClC;oBACAiB,OAAO;wBACLC,gBAAgB;4BACd,CAAC,EAAElB,KAAK,EAAE;gCACR,IAAI,CAACA,OAAO,OAAOA;gCAEnB,mEAAmE;gCACnE,IAAI,CAAC,gBAAgBmB,IAAI,CAACnB,QAAQ;oCAChC,OAAO,CAAC,QAAQ,EAAEA,OAAO;gCAC3B;gCAEA,OAAOA;4BACT;yBACD;oBACH;oBACAoB,UAAU,CAACC;wBACT,2BAA2B;wBAC3B,gBAAgB;wBAChB,IAAI;wBACJ,IAAI;4BACF,IAAIC,IAAID;4BACR,OAAO;wBACT,EAAE,OAAOE,KAAU;4BACjB,OAAO;wBACT;oBACF;gBACF;YACF;SACD;IACH;AACF,EAAE"}