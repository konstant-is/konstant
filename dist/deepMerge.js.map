{"version":3,"sources":["../src/deepMerge.ts"],"sourcesContent":["/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item: unknown): boolean {\n  return Boolean(item && typeof item === \"object\" && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport default function deepMerge(obj1: any, obj2: any) {\n  const output = { ...obj1 };\n\n  for (const key in obj2) {\n    if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n      if (\n        typeof obj2[key] === \"object\" &&\n        !Array.isArray(obj2[key]) &&\n        obj1[key]\n      ) {\n        output[key] = deepMerge(obj1[key], obj2[key]);\n      } else {\n        output[key] = obj2[key];\n      }\n    }\n  }\n\n  return output;\n}\n"],"names":["isObject","item","Boolean","Array","isArray","deepMerge","obj1","obj2","output","key","Object","prototype","hasOwnProperty","call"],"mappings":"AAAA;;;;CAIC,GACD,OAAO,SAASA,SAASC,IAAa;IACpC,OAAOC,QAAQD,QAAQ,OAAOA,SAAS,YAAY,CAACE,MAAMC,OAAO,CAACH;AACpE;AAEA;;;;CAIC,GACD,eAAe,SAASI,UAAUC,IAAS,EAAEC,IAAS;IACpD,MAAMC,SAAS;QAAE,GAAGF,IAAI;IAAC;IAEzB,IAAK,MAAMG,OAAOF,KAAM;QACtB,IAAIG,OAAOC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,MAAME,MAAM;YACnD,IACE,OAAOF,IAAI,CAACE,IAAI,KAAK,YACrB,CAACN,MAAMC,OAAO,CAACG,IAAI,CAACE,IAAI,KACxBH,IAAI,CAACG,IAAI,EACT;gBACAD,MAAM,CAACC,IAAI,GAAGJ,UAAUC,IAAI,CAACG,IAAI,EAAEF,IAAI,CAACE,IAAI;YAC9C,OAAO;gBACLD,MAAM,CAACC,IAAI,GAAGF,IAAI,CAACE,IAAI;YACzB;QACF;IACF;IAEA,OAAOD;AACT"}