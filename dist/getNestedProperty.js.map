{"version":3,"sources":["../src/getNestedProperty.ts"],"sourcesContent":["// @ts-nocheck\n\n/**\n * Get a deeply nested property of an object based on a dot-separated path.\n * @param obj - The object to traverse.\n * @param path - Dot-separated string representing the path to the property.\n * @returns The value at the specified path or undefined if the path does not exist.\n */\nexport const getNestedProperty = (\n  obj: Record<string, unknown>,\n  path: string\n): any => {\n  return path\n    .split(\".\") // Split the path into individual keys\n    .reduce(\n      (acc, key) =>\n        acc && typeof acc === \"object\" && key in acc ? acc[key] : undefined,\n      obj\n    ); // Traverse the object based on the keys\n};\n"],"names":["getNestedProperty","obj","path","split","reduce","acc","key","undefined"],"mappings":"AAAA,cAAc;AAEd;;;;;CAKC,GACD,OAAO,MAAMA,oBAAoB,CAC/BC,KACAC;IAEA,OAAOA,KACJC,KAAK,CAAC,KAAK,sCAAsC;KACjDC,MAAM,CACL,CAACC,KAAKC,MACJD,OAAO,OAAOA,QAAQ,YAAYC,OAAOD,MAAMA,GAAG,CAACC,IAAI,GAAGC,WAC5DN,MACC,wCAAwC;AAC/C,EAAE"}