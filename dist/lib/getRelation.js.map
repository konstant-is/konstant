{"version":3,"sources":["../../src/lib/getRelation.ts"],"sourcesContent":["import { CollectionSlug, DefaultDocumentIDType } from \"payload\";\nimport { getReference } from \"./getReference.js\";\n\ntype RelationProps<T> = {\n  relationTo: string;\n  value: T | DefaultDocumentIDType;\n};\n\ntype FetchDocArgs = { id: DefaultDocumentIDType; collection: CollectionSlug };\n\nexport const getRelation = <T>(props: RelationProps<T>) => {\n  const { relationTo, value } = props;\n\n  const getValue = (): null | T => getReference(value);\n\n  const getOrFetchValue = async (\n    queryCb: (args: FetchDocArgs) => Promise<T | null>\n  ): Promise<T | null> => {\n    const resolvedValue = getValue();\n    if (resolvedValue !== null) {\n      return resolvedValue;\n    }\n\n    try {\n      const result = await queryCb({\n        id: value as DefaultDocumentIDType,\n        collection: relationTo,\n      });\n\n      return result;\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n\n  return {\n    getOrFetchValue,\n    getValue,\n    relationTo,\n  };\n};\n"],"names":["getReference","getRelation","props","relationTo","value","getValue","getOrFetchValue","queryCb","resolvedValue","result","id","collection","e","console","error"],"mappings":"AACA,SAASA,YAAY,QAAQ,oBAAoB;AASjD,OAAO,MAAMC,cAAc,CAAIC;IAC7B,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAE,GAAGF;IAE9B,MAAMG,WAAW,IAAgBL,aAAaI;IAE9C,MAAME,kBAAkB,OACtBC;QAEA,MAAMC,gBAAgBH;QACtB,IAAIG,kBAAkB,MAAM;YAC1B,OAAOA;QACT;QAEA,IAAI;YACF,MAAMC,SAAS,MAAMF,QAAQ;gBAC3BG,IAAIN;gBACJO,YAAYR;YACd;YAEA,OAAOM;QACT,EAAE,OAAOG,GAAG;YACVC,QAAQC,KAAK,CAACF;YACd,OAAO;QACT;IACF;IAEA,OAAO;QACLN;QACAD;QACAF;IACF;AACF,EAAE"}